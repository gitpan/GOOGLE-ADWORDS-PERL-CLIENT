# Please see http://code.google.com/apis/adwords/docs/headers.html
# for an overview of header information.

# Sandbox: client_X+email, where X is a number 1-5 and email is the full
#   address listed in email.
# Prod: If the authorization to access the API was generated out of an MCC
# account, you can list a client customer id number here.
clientId=INSERT_CLIENT_CUSTOMER_ID_HERE

# A string of your choosing, used to identify your application.
userAgent=INSERT_USER_AGENT_HERE

# Sandbox: email++CUR, where CUR is a three letter currency code and email is
#   the full address listed in email.
# Prod: An approved and active 22 character Developer Token.
developerToken=INSERT_DEVELOPER_TOKEN_HERE

# To use the Sandbox environment, uncomment the alternativeUrl.
#alternateUrl=https://adwords-sandbox.google.com

# Peer verification of SSL certificates. To enable specify either CAPath or
# CAFile.
#
# This library can use two different underlying SSL modules either
# IO::Socket::SSL or Crypt::SSLeay, being IO::Socket::SSL the default and
# recommended since it can do certificate authenticity validation as well as
# hostname validation while Crypt::SSLeay does not support hostname validation.

# The certificate authority directory to search in when performing peer
# validation. For example: /etc/ssl/certs
# CAPath=<PATH TO CERTIFICATE AUTHORITY DIRECTORY>

# The certificate authority file to use when performing peer validation.
# For example: /etc/ssl/certs/ca-certificates.crt
# CAFile=<PATH TO CERTIFICATE AUTHORITY FILE>

# Authorization mechanisms

# OAuth2

# Un-comment the following to use OAuth 2 authorization.
# oAuth2ClientId      = INSERT_OAUTH_CLIENT_ID_HERE
# oAuth2ClientSecret  = INSERT_OAUTH_CLIENT_SECRET_HERE
# Optionally un-comment if you want to change defaults
# oAuth2AccessType    = [online|offline] # Default offline
# oAuth2ApprovalPrompt  = [force|auto] # Default auto
# oAuth2RedirectUri  = INSERT_REDIRECT_URI_HERE # Defaults to urn:ietf:wg:oauth:2.0:oob

# Un-comment the following if you already have OAuth 2 authorization tokens.
# oAuth2AccessToken   = INSERT_OAUTH_TOKEN_HERE
# oAuth2RefreshToken   = INSERT_OAUTH_TOKEN_HERE

# OAuth1

# Un-comment the following to use OAuth 1.0a as authorization method.
# oAuthConsumerKey    = INSERT_OAUTH_CONSUMER_KEY_HERE
# oAuthConsumerSecret = INSERT_OAUTH_CONSUMER_SECRET_HERE
# oAuthDisplayName    = OPTIONAL_INSERT_OAUTH_DISPLAY_NAME_HERE

# Optionally: un-comment the following if you already have OAuth 1.0a authorization tokens.
# oAuthToken          = INSERT_OAUTH_TOKEN_HERE
# oAuthTokenSecret    = INSERT_OAUTH_TOKEN_SECRET_HERE

# ClientLogin

# Sandbox: Email address of any valid Google Account.
# Prod: Email address of an AdWords Account.
#   If this is an MCC account, you can specify the identifier for a client
#   account in clientId. If this is a non-MCC account, or if you want to make
#   a call from the context of the MCC, then leave clientId blank.

# Un-comment the following to use ClientLogin
# email=INSERT_LOGIN_EMAIL_HERE
# password=INSERT_PASSWORD_HERE

# Or set the following to use an existing AuthToken.
# This is optional if set, then email and password will not be used.
# authToken=INSERT_AUTH_TOKEN_HERE
